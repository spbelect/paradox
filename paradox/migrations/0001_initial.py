# Generated by Django 2.2 on 2019-05-04 11:09

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('phones', models.TextField()),
                ('external_channels', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InputEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('send_status', models.CharField(default='pending', max_length=20)),
                ('time_sent', models.DateTimeField(null=True)),
                ('time_updated', models.DateTimeField()),
                ('input_id', models.CharField(max_length=40)),
                ('input_label', models.TextField()),
                ('alarm', models.BooleanField()),
                ('country', models.CharField(max_length=2)),
                ('region', models.CharField(max_length=6)),
                ('uik', models.IntegerField()),
                ('complaint_status', models.CharField(choices=[('none', 'не подавалась'), ('refuse_to_accept', 'отказ принять жалобу'), ('refuse_to_resolve', 'отказ рассмотрения жалобы'), ('waiting_reply', 'ожидание решения комиссии'), ('got_unfair_reply', 'получено неудовлетворительное решение'), ('got_fair_reply', 'получено удовлетворительное решение')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoolInputEvent',
            fields=[
                ('inputevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paradox.InputEvent')),
                ('value', models.BooleanField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('paradox.inputevent',),
        ),
        migrations.CreateModel(
            name='IntegerInputEvent',
            fields=[
                ('inputevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paradox.InputEvent')),
                ('value', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('paradox.inputevent',),
        ),
        migrations.CreateModel(
            name='InputEventUserComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('text', models.TextField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='paradox.InputEvent')),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='InputEventImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('uik_complaint', 'Подаваемые в УИК жалобы'), ('uik_reply', 'Ответы, решения от УИК'), ('tik_complaint', 'Подаваемые в ТИК жалобы'), ('tik_reply', 'Ответы, решения от ТИК')], max_length=20)),
                ('md5', models.CharField(max_length=32)),
                ('filepath', models.TextField()),
                ('send_status', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='paradox.InputEvent')),
            ],
            options={
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('fromtime', models.DateTimeField()),
                ('totime', models.DateTimeField()),
                ('country', models.CharField(max_length=2)),
                ('region', models.CharField(max_length=6, null=True)),
                ('mokrug', models.IntegerField(null=True)),
                ('phones', models.TextField()),
                ('external_channels', models.TextField()),
                ('elect_flags', models.TextField()),
                ('coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='paradox.Coordinator')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
